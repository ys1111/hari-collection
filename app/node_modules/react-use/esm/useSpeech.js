import { useRef } from 'react';
import useSetState from './useSetState';
import useMount from './useMount';
var useSpeech = function (text, opts) {
    if (opts === void 0) { opts = {}; }
    var _a = useSetState({
        isPlaying: false,
        volume: opts.volume || 1,
    }), state = _a[0], setState = _a[1];
    var uterranceRef = useRef(null);
    useMount(function () {
        var utterance = new SpeechSynthesisUtterance(text);
        utterance.volume = opts.volume || 1;
        utterance.onstart = function () { return setState({ isPlaying: true }); };
        utterance.onresume = function () { return setState({ isPlaying: true }); };
        utterance.onend = function () { return setState({ isPlaying: false }); };
        utterance.onpause = function () { return setState({ isPlaying: false }); };
        uterranceRef.current = utterance;
        window.speechSynthesis.speak(uterranceRef.current);
    });
    return state;
};
export default useSpeech;
