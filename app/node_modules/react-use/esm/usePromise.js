import { useCallback } from 'react';
import useRefMounted from './useRefMounted';
var usePromise = function () {
    var refMounted = useRefMounted();
    return useCallback(function (promise) {
        return new Promise(function (resolve, reject) {
            var onValue = function (value) {
                if (refMounted.current) {
                    resolve(value);
                }
            };
            var onError = function (error) {
                if (refMounted.current) {
                    reject(error);
                }
            };
            promise.then(onValue, onError);
        });
    }, []);
};
export default usePromise;
